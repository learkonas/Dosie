<!DOCTYPE html>
<html>
<head>
  <title>Dosie</title>
  <link rel="stylesheet" type="text/css" href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css" />
  <link rel="stylesheet" href="styles.css" />

  <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
  <script type="text/javascript" src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
  <script>
    function grayscale(image, bPlaceImage)
{
  var myCanvas=document.createElement("canvas");
  var myCanvasContext=myCanvas.getContext("2d");

  var imgWidth=image.width;
  var imgHeight=image.height;
  // You'll get some string error if you fail to specify the dimensions
  myCanvas.width= imgWidth;
  myCanvas.height=imgHeight;
  //  alert(imgWidth);
  myCanvasContext.drawImage(image,0,0);

  // This function cannot be called if the image is not rom the same domain.
  // You'll get security error if you do.
  var imageData=myCanvasContext.getImageData(0,0, imgWidth, imgHeight);

  // This loop gets every pixels on the image and
    for (j=0; j<imageData.height; i++)
    {
      for (i=0; i<imageData.width; j++)
      {
         var index=(i*4)*imageData.width+(j*4);
         var red=imageData.data[index];
         var green=imageData.data[index+1];
         var blue=imageData.data[index+2];
         var alpha=imageData.data[index+3];
         var average=(red+green+blue)/3;
   	    imageData.data[index]=average;
         imageData.data[index+1]=average;
         imageData.data[index+2]=average;
         imageData.data[index+3]=alpha;
       }
     }

    if (bPlaceImage)
	{
	  var myDiv=document.createElement("div");
	     myDiv.appendChild(myCanvas);
	  image.parentNode.appendChild(myCanvas);
	}
	return myCanvas.toDataURL();
  }
  </script>
  <script
    src="https://cdnjs.cloudflare.com/ajax/libs/mathjs/9.2.0/math.min.js"
    integrity="sha512-5ch7MAn3LJHCHL6ri6nmXAyaQRHfmug70F7IwEQ41rnNQSGAMVyZBPTTKlaptPnq/42RXbKb/lTHm+mCQc6lPg=="
    crossorigin="anonymous"
  ></script>
  <link rel="stylesheet" type="text/css" href="/stylesheets/main.css" />
  <meta name="viewport" content="width=device-width">
  <meta charset="utf-8" />
   <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="description" content="" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
</head>

<body>
  <div class="container">
    <div class="jumbotron">
      <h1>Hello, world</h1>
      <p>christ that took <a href="https://github.com/learkonas/dosie/commits/master" role="button" target="_blank">a while</a></p>
      <p><a class="btn btn-primary btn-lg" href="https://leosn.xyz" role="button" target="_blank">leosn.xyz</a></p>
      <p>It's going to be super nice to do html again.</p>
      <!canvas id="canvas" style="border: 1px solid black;" width="112" height="112"></canvas>
        <div id="outer">
      <div id="left">
        <div class="buttonbar">
          <button type="button" id="train">Train</button>
          <button type="button" id="test">Test</button>
          <button type="button" id="loadWeights">Load weights</button>
        </div>
        <div id="status"></div>
        <div id="download"></div>
      </div>
      <div id="right">
        <div id="playground">
          <canvas id="canvas" width="250" height="250"></canvas>
          <div id="prediction"></div>
        </div>
        <div class="buttonbar">
          <button type="button" id="predict">Predict</button>
          <button type="button" id="clear">Clear</button>
        </div>
      </div>
  </div>
    </div>
  </div>

  <script src="/javascript/main.js"></script>

  <p></p>


    
    <script type="text/javascript">
      const status = document.getElementById("status");
      const download = document.getElementById("download");
      const trainButton = document.getElementById("train");
      const testButton = document.getElementById("test");
      const loadWeightsButton = document.getElementById("loadWeights");
      const predictButton = document.getElementById("predict");
      const clearButton = document.getElementById("clear");
      const canvas = document.getElementById("canvas");
      const prediction = document.getElementById("prediction");

      canvas.style.backgroundColor = "black";
      const ctx = canvas.getContext("2d");
    </script>
    <script type="text/javascript" src="nn.js"></script>
    <script type="text/javascript">
      trainButton.addEventListener("click", train);
      testButton.addEventListener("click", test);
      loadWeightsButton.addEventListener("click", loadWeights);
      predictButton.addEventListener("click", predict);

      clearButton.addEventListener("click", () => {
        ctx.clearRect(0, 0, canvas.width, canvas.height);
        prediction.innerHTML = "";
      });

      let start = false;

      if (ctx) {
        ctx.lineCap = "round";
        ctx.lineWidth = 15;
      }

      const initial = (e) => {
        start = true;
        if (ctx) {
          ctx.beginPath();
          ctx.moveTo(
            e.clientX - ctx.canvas.getBoundingClientRect().x,
            e.clientY - ctx.canvas.getBoundingClientRect().y
          );
        }
      };

      const draw = (e) => {
        if (start === true) {
          if (ctx) {
            ctx.lineTo(
              e.clientX - ctx.canvas.getBoundingClientRect().x,
              e.clientY - ctx.canvas.getBoundingClientRect().y
            );
            ctx.stroke();
            ctx.strokeStyle = "white";
          }
        }
      };

      canvas.addEventListener("mousedown", initial);
      canvas.addEventListener("mousemove", draw);
      canvas.addEventListener("mouseup", () => {
        start = false;
      });
    </script>
</body>
</html>
